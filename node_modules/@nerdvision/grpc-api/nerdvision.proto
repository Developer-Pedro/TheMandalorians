syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.nerdvision.grpc";
option java_outer_classname = "NerdVisionProto";

package com.nerdvision.grpc;

/* This is the initial connection message to the server to begin streaming the breakpoint configurations. */
message BreakpointConnection {

}

/* This is the response that is streamed to the client. Each response contains
*  an atomic view of the current state of the breakpoints for the client. */
message BreakpointResponse {
    /* This is the configuration of a breakpoint. */
    message Breakpoint {
        /* This will define the type of source the breakpoint should be installed into.*/
        enum SourceType {
            JAVA = 0; // Represents Java source code.
            TYPE_SCRIPT = 1; // Represents TypeScript or JavaScript source code.
            PYTHON = 2; // Represents Python source code.
        }
        string breakpoint_id = 1; // The id of the breakpoint
        string workspace_id = 2; // The id of the workspace this breakpoint belongs to

        string rel_path = 3; // The relative path to the source file this breakpoint should be installed in
        int64 line_no = 4; // The line number where this breakpoint should be installed

        SourceType src_type = 5; // The type of source this breakpoint should be installed into
        map<string, string> args = 6; //  Key value pairs the contain any additional configurations for this breakpoint

        string condition = 7; // An expression that is set to the breakpoint and is evaluated each time it hits the breakpoint. If the evaluation result is true, the selected actions are performed.
        map<string,string> named_watchers = 8; //Contains variables or expressions in the context of the current stack frame

        int32 fire_count = 9; //The number of times a breakpoint is triggered before it is disabled

        string type = 10; //The type of breakpoint e.g. stack and frame
    }
    int64 message_id = 1; // The id of the message, the timestamp when this message was sent
    repeated Breakpoint breakpoints = 2; // All the current breakpoints for this client
}

/* This is the service that will stream the breakpoint configuration changes to the clients. */
service NerdVisionBreakpoints {

    /* This will connect to the service and begin streaming the responses to the client. */
    rpc streamBreakpoints (BreakpointConnection) returns (stream BreakpointResponse) {
    }
}
