/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.nerdvision.grpc.BreakpointConnection', null, global);
goog.exportSymbol('proto.com.nerdvision.grpc.BreakpointResponse', null, global);
goog.exportSymbol('proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint', null, global);
goog.exportSymbol('proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.nerdvision.grpc.BreakpointConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.nerdvision.grpc.BreakpointConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.nerdvision.grpc.BreakpointConnection.displayName = 'proto.com.nerdvision.grpc.BreakpointConnection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.nerdvision.grpc.BreakpointConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.com.nerdvision.grpc.BreakpointConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.nerdvision.grpc.BreakpointConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointConnection.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.nerdvision.grpc.BreakpointConnection}
 */
proto.com.nerdvision.grpc.BreakpointConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.nerdvision.grpc.BreakpointConnection;
  return proto.com.nerdvision.grpc.BreakpointConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.nerdvision.grpc.BreakpointConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.nerdvision.grpc.BreakpointConnection}
 */
proto.com.nerdvision.grpc.BreakpointConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.nerdvision.grpc.BreakpointConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.nerdvision.grpc.BreakpointConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.nerdvision.grpc.BreakpointConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.nerdvision.grpc.BreakpointResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.nerdvision.grpc.BreakpointResponse.repeatedFields_, null);
};
goog.inherits(proto.com.nerdvision.grpc.BreakpointResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.nerdvision.grpc.BreakpointResponse.displayName = 'proto.com.nerdvision.grpc.BreakpointResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.nerdvision.grpc.BreakpointResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.nerdvision.grpc.BreakpointResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    breakpointsList: jspb.Message.toObjectList(msg.getBreakpointsList(),
    proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse}
 */
proto.com.nerdvision.grpc.BreakpointResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.nerdvision.grpc.BreakpointResponse;
  return proto.com.nerdvision.grpc.BreakpointResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse}
 */
proto.com.nerdvision.grpc.BreakpointResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageId(value);
      break;
    case 2:
      var value = new proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint;
      reader.readMessage(value,proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.deserializeBinaryFromReader);
      msg.addBreakpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.nerdvision.grpc.BreakpointResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBreakpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.displayName = 'proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    breakpointId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workspaceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    relPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lineNo: jspb.Message.getFieldWithDefault(msg, 4, 0),
    srcType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    argsMap: (f = msg.getArgsMap()) ? f.toObject(includeInstance, undefined) : [],
    condition: jspb.Message.getFieldWithDefault(msg, 7, ""),
    namedWatchersMap: (f = msg.getNamedWatchersMap()) ? f.toObject(includeInstance, undefined) : [],
    fireCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    type: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint;
  return proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBreakpointId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkspaceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelPath(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLineNo(value);
      break;
    case 5:
      var value = /** @type {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType} */ (reader.readEnum());
      msg.setSrcType(value);
      break;
    case 6:
      var value = msg.getArgsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 8:
      var value = msg.getNamedWatchersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFireCount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBreakpointId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkspaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLineNo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSrcType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getArgsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNamedWatchersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getFireCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType = {
  JAVA: 0,
  TYPE_SCRIPT: 1,
  PYTHON: 2
};

/**
 * optional string breakpoint_id = 1;
 * @return {string}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getBreakpointId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setBreakpointId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workspace_id = 2;
 * @return {string}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getWorkspaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setWorkspaceId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rel_path = 3;
 * @return {string}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getRelPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setRelPath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 line_no = 4;
 * @return {number}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getLineNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setLineNo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional SourceType src_type = 5;
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getSrcType = function() {
  return /** @type {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.SourceType} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setSrcType = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * map<string, string> args = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getArgsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.clearArgsMap = function() {
  this.getArgsMap().clear();
};


/**
 * optional string condition = 7;
 * @return {string}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setCondition = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> named_watchers = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getNamedWatchersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.clearNamedWatchersMap = function() {
  this.getNamedWatchersMap().clear();
};


/**
 * optional int32 fire_count = 9;
 * @return {number}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getFireCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setFireCount = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int64 message_id = 1;
 * @return {number}
 */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.setMessageId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Breakpoint breakpoints = 2;
 * @return {!Array<!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint>}
 */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.getBreakpointsList = function() {
  return /** @type{!Array<!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint, 2));
};


/** @param {!Array<!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint>} value */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.setBreakpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint}
 */
proto.com.nerdvision.grpc.BreakpointResponse.prototype.addBreakpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.nerdvision.grpc.BreakpointResponse.Breakpoint, opt_index);
};


proto.com.nerdvision.grpc.BreakpointResponse.prototype.clearBreakpointsList = function() {
  this.setBreakpointsList([]);
};


goog.object.extend(exports, proto.com.nerdvision.grpc);
