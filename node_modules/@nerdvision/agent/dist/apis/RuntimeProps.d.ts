/// <reference types="node" />
import { Debugger, Runtime, Session } from 'inspector';
export default class RuntimeProps {
    private _session;
    private _currentId;
    private _seenHashes;
    constructor(_session: Session);
    private _maxDepth;
    /**
     * Allowing this to be set, for testing purposes
     *
     * @param maxDepth
     */
    maxDepth: number;
    readonly seenHashes: Map<string, number>;
    getNextId(): number;
    /**
     * Get the given prop from Runtime or from the cache
     *
     * @param rawProperty
     * @param depth
     */
    getFullProp(rawProperty: Runtime.PropertyDescriptor | Debugger.Scope | any, depth: number): any;
    /**
     * Generate a hash so we can check if we've already seen a variable with the same type & immediate children
     *
     * @param sub
     * @param result
     */
    generateHash(sub: Runtime.RemoteObject | Debugger.Scope | any, result: any[]): string;
    /**
     * Get the children from the Runtime
     *
     * @param objectId
     */
    getChildrenFromRuntime(objectId: string): any[];
    /**
     * Convert an object to a string
     *
     * @param objs
     */
    private objToString;
}
